name: Validate PR

on:
        push:
        pull_request:
                types: [opened, synchronize, reopened, edited]

jobs:
        branch-check:
                runs-on: ubuntu-18.04

                continue-on-error: true

                steps:
                - uses: actions/checkout@v2
                  with:
                          ref: 'libmpool'

        build:
                runs-on: ${{ matrix.os }}
                needs: [branch-check]
                strategy:
                        fail-fast: true
                        matrix:
                                os: [ubuntu-18.04]
                                build_type: [release, debugoptimized, debug]

                steps:
                - uses: actions/checkout@v2
                  with:
                          ref: 'libmpool'
                - name: Setup python environment to run branch
                  run: |
                          python3 -m venv venv
                          source venv/bin/activate
                          pip3 install -r requirements.txt
                          pip3 install meson ninja

                - name: Build setup with YCSB, tools and configs
                  run: |
                          echo "BUILD=${{ matrix.build_type }}"
                          meson builddir -Dbuildtype=${{ matrix.build_type }} -Dycsb=true -Dinstall-tools=true -Dinstall-configs=true -Dwerror=true

                - name: Clang format check
                  continue-on-error: true
                  run: meson -C builddir format-check

                - name: Run Unit tests
                  run: |
                          meson test -C builddir --print-errorlogs --no-stdsplit

